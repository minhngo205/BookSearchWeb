@model PagedList.IPagedList<BookSearchWeb.Models.BookUserSearch>
@using PagedList.Mvc;

@{var searchfor = Request.Params["id"];}
@if (searchfor.IsEmpty())
{
    ViewBag.Title = "Search Results Page";
}
else
{
    ViewBag.Title = "Searched for: " + searchfor;
}

<div class="container">
    @if (Model == null || Model.TotalItemCount <= 0)
    {
        <p>Sorry no results for <strong>@searchfor</strong></p>
    }
    else
    {
        if (searchfor != null)
        {
            <p>Their are <strong>@Model.TotalItemCount</strong> results for <strong>@searchfor</strong></p>
        }
        else
        {
            <p>Recently searched</p>
        }

        <table class="table">
            <tr>
                <th>Name</th>
                <th>Author</th>
                <th>Last Updated</th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td class="hoverEffect">@Html.ActionLink(@item.Name, "BookDetails", new { bookLink = @item.BookLink, authorLink = @item.AuthorLink, authorName = @item.Author })</td>
                    <td class="hoverEffect">@Html.ActionLink(@item.Author, "AuthorDetails", new { authorLink = @item.AuthorLink, authorName = @item.Author })</td>
                    <td>@item.DataAndTime</td>
                </tr>
            }
        </table>
        if (@Model.Count() < @Model.TotalItemCount)
        {
            var id = searchfor;
            @Html.PagedListPager(Model, page => Url.Action("SearchResults", new { id, page, pageSize = Model.PageSize }));
        }
    }

</div>